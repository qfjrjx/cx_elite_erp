<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.erp.purchase.mapper.PurchaseOrderMapper">

    <sql id="countPurchaseOrderSql">
        SELECT
            COUNT( 1 )
        FROM
            (
                SELECT
                po.id,
                po.order_state,
                po.purchase_requisition_date,
                po.order_number,
                po.supplier_name,
                pos.order_money orderMoney,
                fpa.finance_parameter_name currencyName,
                fpb.finance_parameter_name taxRateName,
                po.payment_method,
                po.order_deposit,
                po.invoice_billing_situation,
                po.order_preparer,
                po.order_preparation_date,
                sum( pos.order_quantity ) orderQuantity
                FROM
                jr_purchase_order po
                LEFT JOIN jr_purchase_order_schedule pos ON ( po.order_number = pos.odd_numbers )
                LEFT JOIN jr_finance_parameters fpa ON ( po.currency_id = fpa.id )
                LEFT JOIN jr_finance_parameters fpb ON ( po.tax_rate_id = fpb.id )
                WHERE
                1 = 1
                <if test="purchaseOrder.signedDateFrom != null and purchaseOrder.signedDateFrom !=''">
                    And po.purchase_requisition_date &gt;= #{purchaseOrder.signedDateFrom}
                </if>
                <if test="purchaseOrder.signedDateTo != null and purchaseOrder.signedDateTo !=''">
                    And po.purchase_requisition_date &lt;= #{purchaseOrder.signedDateTo}
                </if>
                <if test="purchaseOrder.supplierNameList != null and purchaseOrder.supplierNameList != ''">
                    AND po.supplier_name = #{purchaseOrder.supplierNameList}
                </if>
                <if test="purchaseOrder.orderState != null and purchaseOrder.orderState != ''">
                    AND po.order_state = #{purchaseOrder.orderState}
                </if>
                <if test="purchaseOrder.orderNumber != null and purchaseOrder.orderNumber != ''">
                    AND po.order_number = #{purchaseOrder.orderNumber}
                </if>
                <if test="purchaseOrder.paymentMethod != null and purchaseOrder.paymentMethod != ''">
                    AND po.payment_method = #{purchaseOrder.paymentMethod}
                </if>
                GROUP BY
                po.order_number
            )jr_purchase_order
        WHERE
        1 = 1
    </sql>

    <sql id="countPurchaseInspectionOrderSql">
        SELECT
            COUNT( 1 )
        FROM
            jr_purchase_order po
        WHERE
            1 = 1
    </sql>

    <sql id="countPurchasePriceChangesSql">
        SELECT
            COUNT( 1 )
        FROM
            (
                SELECT
                    po.order_preparation_date orderPreparationDate,
                    pos.material_name materialName,
                    pos.order_specifications orderSpecifications,
                    pos.order_company orderCompany,
                    pos.order_subclass orderSubclass,
                    po.supplier_name,
                    pos.unit_price unitPrice
                FROM
                    jr_purchase_order po
                        LEFT JOIN jr_purchase_order_schedule pos ON ( po.order_number = pos.odd_numbers )
                WHERE
                    1 = 1
                <if test="purchaseOrder.signedDateFrom != null and purchaseOrder.signedDateFrom !=''">
                    And po.order_preparation_date &gt;= #{purchaseOrder.signedDateFrom}
                </if>
                <if test="purchaseOrder.signedDateTo != null and purchaseOrder.signedDateTo !=''">
                    And po.order_preparation_date &lt;= #{purchaseOrder.signedDateTo}
                </if>
                <if test="purchaseOrder.supplierName != null and purchaseOrder.supplierName != ''">
                    AND po.supplier_name = #{purchaseOrder.supplierName}
                </if>
                <if test="purchaseOrder.orderCode != null and purchaseOrder.orderCode != ''">
                    AND pos.order_code = #{purchaseOrder.orderCode}
                </if>
                <if test="purchaseOrder.materialName != null and purchaseOrder.materialName != ''">
                    AND pos.material_name = #{purchaseOrder.materialName}
                </if>
                <if test="purchaseOrder.orderSpecifications != null and purchaseOrder.orderSpecifications != ''">
                    AND pos.order_specifications = #{purchaseOrder.orderSpecifications}
                </if>
                <if test="purchaseOrder.orderSubclass != null and purchaseOrder.orderSubclass != ''">
                    AND pos.order_subclass = #{purchaseOrder.orderSubclass}
                </if>
            ) jr_purchase_order
        WHERE
            1 = 1
    </sql>

    <sql id="findPurchaseOrderSql">
        SELECT
            po.id,
            po.order_state,
            po.purchase_requisition_date,
            po.order_number,
            po.supplier_name,
            pos.order_money orderMoney,
            fpa.finance_parameter_name currencyName,
            fpb.finance_parameter_name taxRateName,
            po.payment_method,
            po.order_deposit,
            po.invoice_billing_situation,
            po.order_preparer,
            po.order_preparation_date,
            sum( pos.order_quantity ) orderQuantity
        FROM
            jr_purchase_order po
            LEFT JOIN jr_purchase_order_schedule pos ON ( po.order_number = pos.odd_numbers )
            LEFT JOIN jr_finance_parameters fpa ON ( po.currency_id = fpa.id )
            LEFT JOIN jr_finance_parameters fpb ON ( po.tax_rate_id = fpb.id )
        WHERE
            1 = 1
            <if test="purchaseOrder.signedDateFrom != null and purchaseOrder.signedDateFrom !=''">
                And po.purchase_requisition_date &gt;= #{purchaseOrder.signedDateFrom}
            </if>
            <if test="purchaseOrder.signedDateTo != null and purchaseOrder.signedDateTo !=''">
                And po.purchase_requisition_date &lt;= #{purchaseOrder.signedDateTo}
            </if>
            <if test="purchaseOrder.supplierNameList != null and purchaseOrder.supplierNameList != ''">
                AND po.supplier_name = #{purchaseOrder.supplierNameList}
            </if>
            <if test="purchaseOrder.orderState != null and purchaseOrder.orderState != ''">
                AND po.order_state = #{purchaseOrder.orderState}
            </if>
            <if test="purchaseOrder.orderNumber != null and purchaseOrder.orderNumber != ''">
                AND po.order_number = #{purchaseOrder.orderNumber}
            </if>
            <if test="purchaseOrder.paymentMethod != null and purchaseOrder.paymentMethod != ''">
                AND po.payment_method = #{purchaseOrder.paymentMethod}
            </if>
        GROUP BY
	        po.order_number
    </sql>

    <sql id="findPurchaseClosedQueryPage">
        SELECT
            po.order_number,
            pos.order_code,
            pos.material_name,
            pos.order_specifications,
            pos.order_quality,
            pos.order_brand,
            pos.order_company,
            pos.order_quantity,
            pos.unit_price,
            pos.order_money,
            pos.order_remarks
        FROM
            jr_purchase_order po
            LEFT JOIN jr_purchase_order_schedule pos ON ( po.order_number = pos.odd_numbers )
    </sql>

    <sql id="queryPurchaseInspectionOrderSql">
        SELECT
            po.id,
            po.order_number,
            pos.material_name,
            pos.order_specifications,
            pos.order_company,
            pos.order_quantity,
            pos.unit_price,
            pos.order_money,
            pos.order_remarks,
            pos.order_subclass,
            pos.order_category
        FROM
            jr_purchase_order po
                LEFT JOIN jr_purchase_order_schedule pos ON ( po.order_number = pos.odd_numbers )
        WHERE
            po.order_state = '3'
    </sql>
    <sql id="findPurchasePriceChangesSql">
        SELECT
            po.order_preparation_date orderPreparationDate,
            pos.material_name materialName,
            pos.order_specifications orderSpecifications,
            pos.order_company orderCompany,
            pos.order_subclass orderSubclass,
            po.supplier_name,
            pos.unit_price unitPrice
        FROM
            jr_purchase_order po
                LEFT JOIN
            jr_purchase_order_schedule pos ON ( po.order_number = pos.odd_numbers )
        WHERE
            1 = 1
        <if test="purchaseOrder.signedDateFrom != null and purchaseOrder.signedDateFrom !=''">
            And po.order_preparation_date &gt;= #{purchaseOrder.signedDateFrom}
        </if>
        <if test="purchaseOrder.signedDateTo != null and purchaseOrder.signedDateTo !=''">
            And po.order_preparation_date &lt;= #{purchaseOrder.signedDateTo}
        </if>
        <if test="purchaseOrder.supplierName != null and purchaseOrder.supplierName != ''">
            AND po.supplier_name = #{purchaseOrder.supplierName}
        </if>
        <if test="purchaseOrder.orderCode != null and purchaseOrder.orderCode != ''">
            AND pos.order_code = #{purchaseOrder.orderCode}
        </if>
        <if test="purchaseOrder.materialName != null and purchaseOrder.materialName != ''">
            AND pos.material_name = #{purchaseOrder.materialName}
        </if>
        <if test="purchaseOrder.orderSpecifications != null and purchaseOrder.orderSpecifications != ''">
            AND pos.order_specifications = #{purchaseOrder.orderSpecifications}
        </if>
        <if test="purchaseOrder.orderSubclass != null and purchaseOrder.orderSubclass != ''">
            AND pos.order_subclass = #{purchaseOrder.orderSubclass}
        </if>
    </sql>

    <select id="countPurchaseOrder" parameterType="com.erp.purchase.entity.PurchaseOrder" resultType="long">
        <include refid="countPurchaseOrderSql"/>
    </select>

    <select id="countPurchaseInspectionOrder" parameterType="com.erp.purchase.entity.PurchaseOrder" resultType="long">
        <include refid="countPurchaseInspectionOrderSql"/>
    </select>

    <select id="countPurchasePriceChanges" parameterType="com.erp.purchase.entity.PurchaseOrder" resultType="long">
        <include refid="countPurchasePriceChangesSql"/>
    </select>

    <select id="findPurchaseOrderPage" parameterType="com.erp.purchase.entity.PurchaseOrder" resultType="com.erp.purchase.entity.PurchaseOrder">
        <include refid="findPurchaseOrderSql"/>
    </select>

    <select id="findPurchasePriceChanges" parameterType="com.erp.purchase.entity.PurchaseOrder" resultType="com.erp.purchase.entity.PurchaseOrder">
        <include refid="findPurchasePriceChangesSql"/>
    </select>

    <select id="purchasePriceChangesExport" parameterType="com.erp.purchase.entity.PurchaseOrder" resultType="com.erp.purchase.entity.PurchaseOrder">
        SELECT
        po.order_preparation_date orderPreparationDate,
        pos.material_name materialName,
        pos.order_specifications orderSpecifications,
        pos.order_company orderCompany,
        pos.order_subclass orderSubclass,
        po.supplier_name,
        pos.unit_price unitPrice
        FROM
        jr_purchase_order po
        LEFT JOIN
        jr_purchase_order_schedule pos ON ( po.order_number = pos.odd_numbers )
        WHERE
        1 = 1
        <if test="purchaseOrder.signedDateFrom != null and purchaseOrder.signedDateFrom !=''">
            And po.order_preparation_date &gt;= #{purchaseOrder.signedDateFrom}
        </if>
        <if test="purchaseOrder.signedDateTo != null and purchaseOrder.signedDateTo !=''">
            And po.order_preparation_date &lt;= #{purchaseOrder.signedDateTo}
        </if>
        <if test="purchaseOrder.supplierName != null and purchaseOrder.supplierName != ''">
            AND po.supplier_name = #{purchaseOrder.supplierName}
        </if>
        <if test="purchaseOrder.orderCode != null and purchaseOrder.orderCode != ''">
            AND pos.order_code = #{purchaseOrder.orderCode}
        </if>
        <if test="purchaseOrder.materialName != null and purchaseOrder.materialName != ''">
            AND pos.material_name = #{purchaseOrder.materialName}
        </if>
        <if test="purchaseOrder.orderSpecifications != null and purchaseOrder.orderSpecifications != ''">
            AND pos.order_specifications = #{purchaseOrder.orderSpecifications}
        </if>
        <if test="purchaseOrder.orderSubclass != null and purchaseOrder.orderSubclass != ''">
            AND pos.order_subclass = #{purchaseOrder.orderSubclass}
        </if>
    </select>

    <!--查询出最后一个采购订单单号-->
    <select id="queryPurchaseOrder" resultType="com.erp.purchase.entity.PurchaseOrder">
         SELECT
            po.id,
            po.order_state,
            po.purchase_requisition_date,
            po.order_number,
            po.supplier_name,
            po.currency_id,
            po.tax_rate_id,
            po.payment_method,
            po.order_deposit,
            po.invoice_billing_situation,
            po.order_preparer,
            po.order_preparation_date
        FROM
            jr_purchase_order po
        WHERE
            1 = 1
        GROUP BY
            po.order_preparation_date
        ORDER BY
            po.order_preparation_date DESC
            LIMIT 1;
    </select>

    <!--向数据库添加采购订单数据-->
    <insert id="savePurchaseOrderDate" parameterType="com.erp.purchase.entity.PurchaseOrder">
        INSERT INTO
            jr_purchase_order
            (
                purchase_requisition_date,
                order_number,
                supplier_name,
                currency_id,
                tax_rate_id,
                payment_method,
                order_deposit,
                invoice_billing_situation,
                order_preparer,
                order_preparation_date
             )
        VALUES
            (
             #{purchaseRequisitionDate},
             #{orderNumber},
             #{supplierName},
             #{currencyId},
             #{taxRateId},
             #{paymentMethod},
             #{orderDeposit},
             #{invoiceBillingSituation},
             #{orderPreparer},
             #{orderPreparationDate}
            )
    </insert>

    <!--向数据库添加采购订单数据-->
    <insert id="savePurchaseOrderSchedule" parameterType="com.erp.purchase.entity.PurchaseOrderSchedule">
        INSERT INTO
            jr_purchase_order_schedule
            (
                odd_numbers,
                application_no,
                order_code,
                material_name,
                order_specifications,
                order_quality,
                order_brand,
                order_company,
                order_quantity,
                unit_price,
                order_money,
                delivery_date,
                order_remarks,
                order_subclass,
                order_category
             )
        VALUES
            (
             #{oddNumbers},
             #{applicationNo},
             #{orderCode},
             #{materialName},
             #{orderSpecifications},
             #{orderQuality},
             #{orderBrand},
             #{orderCompany},
             #{orderQuantity},
             #{unitPrice},
             #{orderMoney},
             #{deliveryDate},
             #{orderRemarks},
             #{orderSubclass},
             #{orderCategory}
            )
    </insert>


    <select id="queryPurchaseOrderSchedule" parameterType="String" resultType="com.erp.purchase.entity.PurchaseOrderSchedule">
       SELECT
            pos.id,
            pos.odd_numbers,
            pos.application_no,
            pos.order_code,
            pos.material_name,
            pos.order_specifications,
            pos.order_quality,
            pos.order_brand,
            pos.order_company,
            pos.order_quantity,
            pos.unit_price,
            pos.order_money,
            pos.delivery_date,
            pos.order_remarks
        FROM
            jr_purchase_order_schedule pos
        WHERE
            pos.odd_numbers = #{oddNumbers}
    </select>

    <!--修改回显-->
    <select id="queryPurchaseOrderList" parameterType="Long" resultType="com.erp.purchase.entity.PurchaseOrder">
        SELECT
            pr.id,
            pr.order_state orderState,
            pr.purchase_requisition_date purchaseRequisitionDate,
            pr.order_number orderNumber,
            pr.supplier_name supplierName,
            pr.currency_id currencyId,
            pr.tax_rate_id tax_rateId,
            pr.payment_method paymentMethod,
            pr.order_deposit orderDeposit,
            pr.invoice_billing_situation invoiceBillingSituation,
            pr.order_preparer orderPreparer,
            pr.order_preparation_date orderPreparationDate
        FROM
            jr_purchase_order pr
        WHERE
            pr.id = #{id}
    </select>

    <delete id="deletePurchaseOrderSchedule">
        delete from jr_purchase_order_schedule  where odd_numbers = #{orderNumber}
    </delete>

    <delete id="deletePurchaseRequisitionOrderNumber">
        delete from jr_purchase_order  where order_number = #{orderNumber}
    </delete>


    <update id="confirmPurchaseOrder"  parameterType="com.erp.purchase.entity.PurchaseOrder">
        UPDATE
            jr_purchase_order
        set order_state=2
        WHERE id=#{ids}
    </update>

    <update id="cancelPurchaseOrder"  parameterType="com.erp.purchase.entity.PurchaseOrder">
        UPDATE
            jr_purchase_order
        set order_state=1
        WHERE id=#{ids}
    </update>

    <!-- 采购收货查询数据 -->
    <select id="findPurchaseClosedQueryPage" parameterType="com.erp.purchase.entity.PurchaseOrder" resultType="com.erp.purchase.entity.PurchaseOrder">
        <include refid="findPurchaseClosedQueryPage"/>
    </select>

    <select id="queryPurchaseInspectionOrder" parameterType="com.erp.purchase.entity.PurchaseOrder" resultType="com.erp.purchase.entity.PurchaseOrder">
        <include refid="queryPurchaseInspectionOrderSql"/>
    </select>

    <!--根据规格进行查询上次采购单价-->
    <select id="queryPaymentPurchaseOrderSchedule" parameterType="String" resultType="com.erp.purchase.entity.PurchaseOrderSchedule">
        SELECT
            unit_price,
            delivery_date
        FROM
            jr_purchase_order_schedule pos
        WHERE
            1 = 1
            AND
            pos.order_specifications = #{invoiceSpecifications}
        ORDER BY
            pos.delivery_date DESC
            LIMIT 1,1;
    </select>

    <!--根据规格进行查询上上次采购单价-->
    <select id="queryPaymentPrevious" parameterType="String" resultType="com.erp.purchase.entity.PurchaseOrderSchedule">
        SELECT
            unit_price,
            delivery_date
        FROM
            jr_purchase_order_schedule pos
        WHERE
            1 = 1
          AND
            pos.order_specifications = #{invoiceSpecifications}
        ORDER BY
            pos.delivery_date DESC
            LIMIT 2,1;
    </select>

</mapper>
